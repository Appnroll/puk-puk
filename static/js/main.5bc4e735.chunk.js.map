{"version":3,"sources":["constants/buttons.js","components/Button.js","components/Switch.js","components/Form.js","components/LoginWithSlackButton.js","components/Login.js","components/RootComponent.js","App.js","serviceWorker.js","index.js"],"names":["workingPlace","title","name","parking","superPowers","Button","react_default","a","createElement","StyledButton","active","this","props","onClick","className","children","Component","styled","button","_templateObject","Switch","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setCurrentState","prop","setState","defineProperty","state","oneValue","objProp","objectSpread","buttons","map","_this2","Row","components_Button","key","bind","div","Switch_templateObject","Form","inOffice","garageTaken","haveKey","Fragment","Property","components_Switch","disabled","Form_templateObject","redirectUri","encodeURIComponent","slackUrl","concat","LoginWithSlackButton","href","alt","src","srcSet","Login","Container","components_LoginWithSlackButton","Login_templateObject","RootComponent","isAuthorized","Wrapper","Header","components_Form","components_Login","main","RootComponent_templateObject","header","_templateObject2","App","components_RootComponent","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5bc4e735.chunk.js","sourcesContent":["export const workingPlace = [\n    { title: 'biuro', name: 'office' },\n    { title: 'domek', name: 'home' },\n]\n\nexport const parking = [\n    { title: 'duży garaż', name: 'big' },\n    { title: 'mały garaż', name: 'small' },\n    { title: 'przed dużym garażem', name: 'inFrontOfBig' },\n    { title: 'przed małym garażem', name: 'inFrontOfSmall' },\n]\n\nexport const superPowers = [\n    { title: 'mam klucz', name: 'key' }\n]","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nclass Button extends Component {\n    render () {\n        return (\n            <StyledButton active={this.props.active} onClick={this.props.onClick} className={this.props.className}>\n                <div>{ this.props.children }</div>\n            </StyledButton>\n        )\n    }\n}\n\nexport default Button\n\nconst StyledButton = styled.button`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  color: white;\n  background-color: ${props => props.active ? 'forestgreen' : '#aaa'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 10px 10px 0 0;\n  &:hover {\n    cursor: pointer;\n  }\n  &:focus {\n    outline: none;\n  }\n  > div {\n    text-align: center;\n    font-size: 14px;\n    text-transform: uppercase;\n    font-family: 'Lato', sans-serif;\n  }\n`\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Button from \"./Button\";\n\n\nclass Switch extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            ...props.buttons.map(prop => prop.name)\n        }\n    }\n    setCurrentState = (prop) => {\n        this.setState({ [prop]: !this.state[prop]})\n        if (this.props.oneValue) {\n            for (let objProp in this.state) {\n                if (this.state[objProp]) {\n                    this.setState({ [objProp]: false})\n                }\n            }\n        }\n    }\n    render () {\n        return (\n            <Row>\n                {this.props.buttons.map(prop => (\n                    <Button\n                        active={this.state[prop.name]}\n                        key={prop.name}\n                        onClick={this.setCurrentState.bind(this, prop.name)}>\n                        { prop.title }\n                    </Button>\n                ))}\n            </Row>\n        )\n    }\n}\n\nexport default Switch\n\nconst Row = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { workingPlace, parking, superPowers } from \"./../constants/buttons\"\nimport Switch from \"./Switch\";\n\nclass Form extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            inOffice: false,\n            garageTaken: false,\n            haveKey: false\n        }\n    }\n\n    render () {\n        const { inOffice } = this.state\n        return (\n            <>\n                <Property>\n                    <h6>Gdzie jesteś?</h6>\n                    <Switch oneValue buttons={workingPlace}/>\n                </Property>\n                { inOffice && <Property disabled>\n                    <h6>Gdzie parkujesz?</h6>\n                    <Switch oneValue buttons={parking}/>\n                </Property> }\n                <Property disabled>\n                    <h6>Super moce</h6>\n                    <Switch buttons={superPowers}/>\n                </Property>\n            </>\n        )\n    }\n}\n\nexport default Form\n\nconst Property = styled.div`\n  border-bottom: 1px solid #ddd;\n  padding: 30px 0;\n  filter: grayscale(${props => props.disabled ? 100 : 0}%);\n  opacity: ${props => props.disabled ? 0.2 : 1};\n  h6 {\n    margin-bottom: 25px;\n  }\n`\n","import React, { Component } from 'react'\n\nconst scope = 'identity.basic'\nconst clientId = '' // TODO: possibly move to ENV\nconst redirectUri = encodeURIComponent('https://...')\nconst slackUrl = `https://slack.com/oauth/authorize?scope=${scope}&client_id=${clientId}&redirect_uri=${redirectUri}`\n\nclass LoginWithSlackButton extends Component {\n    render () {\n        return (\n            <a href={slackUrl}>\n                <img\n                    alt=\"Login with Slack\"\n                    src=\"https://platform.slack-edge.com/img/sign_in_with_slack.png\"\n                    srcSet=\"https://platform.slack-edge.com/img/sign_in_with_slack.png 1x, https://platform.slack-edge.com/img/sign_in_with_slack@2x.png 2x\"/>\n            </a>\n        )\n    }\n}\n\nexport default LoginWithSlackButton","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport LoginWithSlackButton from \"./LoginWithSlackButton\";\n\nclass Login extends Component {\n    render () {\n        return (\n            <Container>\n                <h4>Kto tam?</h4>\n                <LoginWithSlackButton/>\n            </Container>\n        )\n    }\n}\n\nexport default Login\n\nconst Container = styled.div`\n    margin-top: 20px;\n    h4 {\n      margin-bottom: 20px;\n    }\n`\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Form from \"./Form\";\nimport Login from \"./Login\";\n\nclass RootComponent extends Component {\n    constructor (props) {\n       super(props)\n       this.state = {\n           isAuthorized: true\n       }\n    }\n\n    render () {\n        const { isAuthorized } = this.state\n        return (\n            <Wrapper>\n                <Header>PUK PUK</Header>\n                { isAuthorized ? <Form/> : <Login/>}\n            </Wrapper>\n        )\n    }\n}\n\nexport default RootComponent\n\nconst Wrapper = styled.main`\n  margin: 0 auto;\n  padding: 0 20px;\n  max-width: 1240px;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst Header = styled.header`\n  font-size: 36px;\n  letter-spacing: 2px;\n  display: flex;\n  align-items: center;\n  padding: 20px 0;\n`\n","import React, { Component } from 'react'\nimport RootComponent from './components/RootComponent.js'\n\nclass App extends Component {\n  render () {\n    return (\n      <RootComponent/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/reset.css'\nimport './styles/global.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}